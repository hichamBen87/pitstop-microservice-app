name: CI-Sec Frontend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ───────────────────────────── prepare ─────────────────────────────
  prepare:
    runs-on: [self-hosted, docker]
    defaults:
      run:
        working-directory: pitstop-webapp        # ok, on garde

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node & npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          # <<< ICI le chemin RELATIF depuis la racine du dépôt >>>
          cache-dependency-path: pitstop-webapp/package-lock.json

      - name: Install deps
        run: npm ci

  # ───────────────────────────── SAST (Sonar + Semgrep) ──────────────
  sast:
    needs: prepare
    runs-on: [self-hosted, docker]
    if: github.event_name == 'pull_request'     # scanne uniquement les PR
    defaults:
      run:
        working-directory: pitstop-webapp

    steps:
      - uses: actions/checkout@v4

      # ---------- SonarCloud ----------
      - name: Sonar Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=pitstop-webapp-hicham
            -Dsonar.organization=hichamben

      # ---------- Semgrep ----------
      - name: Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/react          # règles React
          generateSarif: true      # produit semgrep.sarif

      # ---------- Bloquer si CVSS ≥ 5 ----------
      - name: Fail if CVSS >=5
        run: |
          n=$(jq '.runs[].results
                  | map(select(.properties.security_severity_level
                               | tonumber >= 5)) | length' semgrep.sarif || echo 0)
          if [ "$n" -gt 0 ]; then
            echo "::error::Critical SAST finding (CVSS >=5)."
            exit 1
          fi
