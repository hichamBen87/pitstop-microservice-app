name: CI-Sec Frontend

on:
  push:
    branches: [main, test-image-scan]
  pull_request:
    branches: [main]

jobs:
  # ────────────── PREPARE ──────────────
  prepare:
    runs-on: [self-hosted, docker]
    defaults:
      run:
        working-directory: pitstop-webapp

    steps:
      - uses: actions/checkout@v4

      - name: Pull secrets from Vault
        run: |
          echo "DB_PASS=$(vault kv get -field=value secret/db_password)" >> $GITHUB_ENV
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

      - name: Setup Node & npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: pitstop-webapp/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Debug Vault Secret
        run: echo "DB_PASS is $DB_PASS"

  # ────────────── SAST (Sonar + Semgrep) ──────────────
  sast:
    needs: prepare
    runs-on: [self-hosted, docker]
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: pitstop-webapp

    steps:
      - uses: actions/checkout@v4

      - name: Sonar Scan
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=pitstop-webapp-hicham
            -Dsonar.organization=hichamben

      - name: Semgrep Scan
        uses: returntocorp/semgrep-action@v1
        with:
          config: p/react
          generateSarif: true

      - name: Fail if CVSS >=5
        run: |
          n=$(jq '.runs[].results
                  | map(select(.properties.security_severity_level
                               | tonumber >= 5)) | length' semgrep.sarif || echo 0)
          if [ "$n" -gt 0 ]; then
            echo "::error::Critical SAST finding (CVSS >=5)."
            exit 1
          fi

  # ────────────── IMAGE SCAN (Trivy + Snyk) ──────────────
  image-scan:
    needs: prepare
    runs-on: [self-hosted, docker]

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./pitstop-webapp
          tags: webapp:test
          load: true

      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: webapp:test
          severity: CRITICAL,HIGH
          format: table
          output: trivy-report.txt

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt
          retention-days: 3

      - name: Setup Node.js for Snyk
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Snyk monitor (manual)
        run: npx snyk monitor
        working-directory: pitstop-webapp
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # ────────────── SECRETS (GitLeaks) ──────────────
  # secrets:
  #   needs: prepare
  #   runs-on: [self-hosted, docker]
  #   defaults:
  #     run:
  #       working-directory: pitstop-webapp
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Run GitLeaks
  #       uses: zricethezav/gitleaks-action@v2
  #       env:
  #         GITLEAKS_ENABLE_UPLOAD_ARTIFACT: "false"

  # ────────────── DAST (ZAP Baseline) ──────────────
    # ────────────── DAST (ZAP Baseline) ──────────────
  dast:
    needs: image-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install deps
        run: npm ci
        working-directory: pitstop-webapp

      - name: Build frontend
        run: npm run build
        working-directory: pitstop-webapp

      - name: Install static server
        run: npm install -g serve

      - name: Start static server
        run: serve -s dist -l 8080 &
        working-directory: pitstop-webapp

      - name: Wait for service to be ready
        run: sleep 20

      - name: ZAP baseline
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: "http://localhost:8080"

      - name: Upload ZAP report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report_html.html
